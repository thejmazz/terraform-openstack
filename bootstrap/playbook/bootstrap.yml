---
- name: "Bootstrap Server On Ubuntu 16.04"

  # hosts: all
  hosts: type_openstack_compute_floatingip_associate_v2
  become: yes
  become_user: root

  # this is so that we can install python 2 via raw ssh
  gather_facts: false

  vars:
    docker_version: "17.06.2"
    docker_compose_version: "1.21.2"
    ca_common_name: "Bootstrap CA"
    country: "Country"
    city: "City"
    organization: "Organization"
    organization_unit: "Organization Unit"
    state: "State"

  pre_tasks:
    - name: "Install python 2 in case not available"
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      register: output
      changed_when: output.stdout != ""
    - name: Gathering facts
      setup:
    - name: update apt cache
      apt: update_cache=yes
      # will show changed every time. see: https://github.com/ansible/ansible/issues/27798
    - name: apt dist-upgrade
      apt: upgrade=dist

  roles:
    - role: angstwad.docker_ubuntu
      docker_pkg_name: "docker-ce={{ docker_version }}*"
      docker_aufs_enabled: false
      daemon_json:
        storage-driver: overlay2
      pip_version_docker_compose: "{{docker_compose_version}}"
      docker_group_members: [ 'ubuntu' ]
    - role: ansible-go
      go_tarball: go1.10.3.linux-amd64.tar.gz
      go_tarball_checksum: sha256:fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035
      go_version_target: "go version go1.10.3 linux/amd64"
      go_download_location: "https://dl.google.com/go/{{ go_tarball }}"
      # adds /etc/profile.d/{go-bin,go-path}.sh
      set_go_path: true

  tasks:
    - name: install useful tools
      apt: name={{ item }}
      with_items:
        - curl
        - jq
        - htop
        - ncdu
        # https://serverfault.com/a/706494/312364
        - libpam-systemd
        - dbus
    - name: Lock docker version
      dpkg_selections:
        name: docker-ce
        selection: hold
    - name: install gcc
      apt: name=gcc
    - name: Install go tools
      shell: "source /etc/profile && go get -u {{ item }}"
      args:
        # Use /bin/bash so we can call `source` instead of `.`, for readability
        executable: /bin/bash
      become: true
      become_user: root
      with_items:
        - github.com/cloudflare/cfssl/cmd/cfssl
        - github.com/cloudflare/cfssl/cmd/cfssljson
        - github.com/cloudflare/cfssl/cmd/multirootca
        - code.gitea.io/gitea
        - github.com/coredns/coredns
      changed_when: false


    # === CFSSL ===
    - name: Ensure /etc/cfssl exists
      file:
        path: /etc/cfssl
        state: directory
        owner: root
        group: root
        mode: 0500
    - name: Copy Root CA certificate signing request configuration into /etc/cfssl
      copy:
        dest: /etc/cfssl/rootca-csr.json
        owner: root
        group: root
        mode: 0400
        content: |
          {
            "CN": "{{ ca_common_name }}",
            "key": {
              "algo": "rsa",
              "size": 2048
            },
            "names": [
               {
                 "C": "{{ country }}",
                 "L": "{{ city }}",
                 "O": "{{ organization }}",
                 "OU": "{{ organization_unit }}",
                 "ST": "{{ state }}"
               }
            ]
          }
    - name: Generate Root CA Key
      shell: "source /etc/profile && cfssl gencert -initca rootca-csr.json | cfssljson -bare ca"
      args:
        creates: /etc/cfssl/ca.pem
        chdir: /etc/cfssl
        executable: /bin/bash



